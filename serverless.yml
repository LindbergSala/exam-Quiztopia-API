service: quiztopia-api
frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}
  environment:
    TABLE_NAME: ${self:custom.tableName}
    JWT_SECRET: ${ssm:/quiztopia/${sls:stage}/JWT_SECRET, env:JWT_SECRET, 'CHANGE_ME_DEV_SECRET'}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tableName}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tableName}/index/*
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*

# Inbyggd esbuild i v4
build:
  esbuild:
    bundle: true
    target: node20
    minify: true
    sourcemap: true
    sourcesContent: false

package:
  individually: true
  patterns:
    - '!**/*.test.*'
    - '!tests/**'
    - '!*.md'
    - '!**/*.md'
    - '!node_modules/.bin/**'

custom:
  tableName: quiztopia

functions:
  ping:
    handler: src/functions/ping.handler
    events:
      - httpApi:
          method: GET
          path: /health

  authRegister:
    handler: src/functions/auth/register.handler
    events:
      - httpApi:
          method: POST
          path: /auth/register

  authLogin:
    handler: src/functions/auth/login.handler
    events:
      - httpApi:
          method: POST
          path: /auth/login

  getQuizzes:
    handler: src/functions/quizzes/list.handler
    events:
      - httpApi:
          method: GET
          path: /quizzes

  getQuizById:
    handler: src/functions/quizzes/get.handler
    events:
      - httpApi:
          method: GET
          path: /quizzes/{quizId}
          
  createQuiz:
    handler: src/functions/quizzes/create.handler
    events:
      - httpApi:
          method: POST
          path: /quizzes

  deleteQuiz:
    handler: src/functions/quizzes/delete.handler
    events:
      - httpApi:
          method: DELETE
          path: /quizzes/{quizId}

  addQuestion:
    handler: src/functions/questions/create.handler
    events:
      - httpApi:
          method: POST
          path: /quizzes/{quizId}/questions

  submitScore:
    handler: src/functions/scores/submit.handler
    events:
      - httpApi:
          method: POST
          path: /quizzes/{quizId}/scores

  getLeaderboard:
    handler: src/functions/scores/leaderboard.handler
    events:
      - httpApi:
          method: GET
          path: /quizzes/{quizId}/leaderboard




resources:
  Resources:
    QuiztopiaTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

